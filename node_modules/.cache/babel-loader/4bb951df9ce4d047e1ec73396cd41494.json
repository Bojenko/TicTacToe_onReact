{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\TicTacItem.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let TicTacState;\n\n(function (TicTacState) {\n  TicTacState[\"state_x\"] = \"res/x.png\";\n  TicTacState[\"state_o\"] = \"res/round.png\";\n  TicTacState[\"empty\"] = \"empty\";\n})(TicTacState || (TicTacState = {}));\n\nconst TicTacItem = (width, height) => {\n  var currentState = TicTacState.empty;\n\n  const ChangeState = () => {\n    if (currentState == TicTacState.empty) currentState = TicTacState.state_o;else currentState = TicTacState.empty;\n  };\n\n  if (currentState == TicTacState.empty) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: width,\n      onClick: () => {\n        ChangeState();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => {\n        ChangeState();\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_c = TicTacItem;\nexport default TicTacItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TicTacItem\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/TicTacItem.tsx"],"names":["React","TicTacState","TicTacItem","width","height","currentState","empty","ChangeState","state_o"],"mappings":";AAAA,OAAOA,KAAP,MAAwB,OAAxB;;AACA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAUZ,MAAMC,UAA8B,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AACrD,MAAIC,YAAwB,GAAEJ,WAAW,CAACK,KAA1C;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAGF,YAAY,IAAEJ,WAAW,CAACK,KAA7B,EAAoCD,YAAY,GAAGJ,WAAW,CAACO,OAA3B,CAApC,KACKH,YAAY,GAAGJ,WAAW,CAACK,KAA3B;AACN,GAHD;;AAKA,MAAGD,YAAY,IAAIJ,WAAW,CAACK,KAA/B,EAAqC;AACjC,wBACI;AACI,MAAA,KAAK,EAAEH,KADX;AAEI,MAAA,OAAO,EAAE,MAAI;AACTI,QAAAA,WAAW;AACd;AAJL;AAAA;AAAA;AAAA;AAAA,YADJ;AASH,GAVD,MAWK;AACD,wBACI;AACI,MAAA,OAAO,EAAE,MAAI;AACTA,QAAAA,WAAW;AACd,OAHL;AAAA,6BAKI;AAAK,QAAA,GAAG,EAAEF;AAAV;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;AACJ,CA7BD;;KAAMH,U;AA+BN,eAAeA,UAAf","sourcesContent":["import React, {FC} from 'react';\r\nexport enum TicTacState {\r\n    state_x='res/x.png',\r\n    state_o='res/round.png',\r\n    empty = 'empty'\r\n}\r\nexport  interface TicTacItemProps{\r\n    onClick:()=>void,\r\n    width:string,\r\n    height:string\r\n}\r\nconst TicTacItem:FC<TicTacItemProps> = (width,height) => {\r\n    var currentState:TicTacState =TicTacState.empty;\r\n    const ChangeState = () => {\r\n      if(currentState==TicTacState.empty) currentState = TicTacState.state_o;\r\n      else currentState = TicTacState.empty;\r\n    }\r\n\r\n    if(currentState == TicTacState.empty){\r\n        return(\r\n            <div\r\n                style={width}\r\n                onClick={()=>{\r\n                    ChangeState();\r\n                }}>\r\n\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div\r\n                onClick={()=>{\r\n                    ChangeState();\r\n                }}\r\n            >\r\n                <img src={currentState}></img>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default TicTacItem;"]},"metadata":{},"sourceType":"module"}