{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IconButton } from \"@mui/material\";\nimport Toe, { Type } from \"./Toe\";\nimport Winner from './Winner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStatement = [[Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none]];\nvar Turn;\n\n(function (Turn) {\n  Turn[\"player1\"] = \"player1\";\n  Turn[\"player2\"] = \"player2\";\n})(Turn || (Turn = {}));\n\nconst Game = _ref => {\n  _s();\n\n  let {\n    width = '400px',\n    height = '400px'\n  } = _ref;\n  const [winner, setWinner] = useState({\n    is: 'me'\n  });\n  let curTurn = Turn.player1;\n  let continueFlag = true;\n\n  function GetGameField(x, y) {\n    if (curTurn === Turn.player1) {\n      GameStatement[x][y] = Type.type_o;\n    } else {\n      GameStatement[x][y] = Type.type_x;\n    } // eslint-disable-next-line no-restricted-globals\n\n\n    curTurn = SwitchTurn(curTurn);\n\n    if (EndGameCheck().EndGame) {\n      WinnerMessage(EndGameCheck().Winner);\n      winner.is = EndGameCheck().Winner.toString();\n    }\n\n    if (!continueFlag) return Type.none;else return GameStatement[x][y];\n  }\n\n  const WinnerMessage = winner => {\n    setTimeout(() => {\n      continueFlag = false;\n    }, 10);\n    alert('WINNER IS' + winner.toString());\n  };\n\n  const ThatPlayerWon = toeType => {\n    for (let i = 0; i < 3; i++) {\n      if (GameStatement[i][0] === toeType && GameStatement[i][1] === toeType && GameStatement[i][2] === toeType) {\n        return true;\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      if (GameStatement[0][i] === toeType && GameStatement[1][i] === toeType && GameStatement[2][i] === toeType) {\n        return true;\n      }\n    }\n\n    if (GameStatement[0][0] === toeType && GameStatement[1][1] === toeType && GameStatement[2][2] === toeType) {\n      return true;\n    }\n\n    if (GameStatement[0][2] === toeType && GameStatement[1][1] === toeType && GameStatement[2][0] === toeType) {\n      return true;\n    }\n  };\n\n  const IsDraw = () => {\n    let NotEmptyElements = 0;\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (GameStatement[i][j] !== Type.none) NotEmptyElements++;\n      }\n    }\n\n    return NotEmptyElements === 9;\n  };\n\n  function EndGameCheck() {\n    if (ThatPlayerWon(Type.type_o)) return {\n      EndGame: true,\n      Winner: Type.type_o\n    };\n    if (ThatPlayerWon(Type.type_x)) return {\n      EndGame: true,\n      Winner: Type.type_x\n    };\n    if (IsDraw()) return {\n      EndGame: true,\n      Winner: Type.none\n    };else return {\n      EndGame: false,\n      Winner: Type.none\n    };\n  }\n\n  const SwitchTurn = current => {\n    if (current === Turn.player1) return Turn.player2;else return Turn.player1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {\n      winnerString: winner.is\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"9+LkczdF1heITqquV+jqRcP3PLI=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/Game.tsx"],"names":["React","useState","IconButton","Toe","Type","Winner","GameStatement","none","Turn","Game","width","height","winner","setWinner","is","curTurn","player1","continueFlag","GetGameField","x","y","type_o","type_x","SwitchTurn","EndGameCheck","EndGame","WinnerMessage","toString","setTimeout","alert","ThatPlayerWon","toeType","i","IsDraw","NotEmptyElements","j","current","player2","display","flexWrap","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport {IconButton} from \"@mui/material\";\r\nimport Toe, {Type} from \"./Toe\";\r\nimport Winner from './Winner'\r\n\r\nexport interface GameProps {\r\n    width?: string,\r\n    height?: string\r\n}\r\n\r\n\r\nconst GameStatement: Type[][] = [\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none]\r\n]\r\n\r\nenum Turn {\r\n    player1 = 'player1',\r\n    player2 = 'player2'\r\n}\r\n\r\nconst Game: FC<GameProps> = (\r\n    {\r\n        width = '400px',\r\n        height = '400px'\r\n    }) => {\r\n    const [winner, setWinner] = useState({\r\n        is:'me'\r\n    });\r\n    let curTurn: Turn = Turn.player1;\r\n    let continueFlag = true;\r\n\r\n    function GetGameField(x: number, y: number) {\r\n        if (curTurn === Turn.player1) {\r\n            GameStatement[x][y] = Type.type_o;\r\n        } else {\r\n            GameStatement[x][y] = Type.type_x;\r\n        }\r\n        // eslint-disable-next-line no-restricted-globals\r\n        curTurn = SwitchTurn(curTurn);\r\n        if (EndGameCheck().EndGame) {\r\n            WinnerMessage(EndGameCheck().Winner)\r\n            winner.is=EndGameCheck().Winner.toString();\r\n        }\r\n        if (!continueFlag) return Type.none;\r\n        else return GameStatement[x][y];\r\n    }\r\n\r\n    const WinnerMessage = (winner: Type) => {\r\n        setTimeout(() => {\r\n            continueFlag = false\r\n        }, 10);\r\n        alert('WINNER IS' + winner.toString());\r\n    }\r\n\r\n\r\n    const ThatPlayerWon = (toeType: Type) => {\r\n        for (let i = 0; i < 3; i++) {\r\n            if ((GameStatement[i][0] === toeType) &&\r\n                (GameStatement[i][1] === toeType) &&\r\n                (GameStatement[i][2] === toeType)) {\r\n                return true;\r\n            }\r\n        }\r\n        for (let i = 0; i < 3; i++) {\r\n            if ((GameStatement[0][i] === toeType) &&\r\n                (GameStatement[1][i] === toeType) &&\r\n                (GameStatement[2][i] === toeType)) {\r\n                return true;\r\n            }\r\n        }\r\n        if ((GameStatement[0][0] === toeType) &&\r\n            (GameStatement[1][1] === toeType) &&\r\n            (GameStatement[2][2] === toeType)) {\r\n            return true;\r\n        }\r\n        if ((GameStatement[0][2] === toeType) &&\r\n            (GameStatement[1][1] === toeType) &&\r\n            (GameStatement[2][0] === toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    const IsDraw = () => {\r\n        let NotEmptyElements = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (GameStatement[i][j] !== Type.none) NotEmptyElements++;\r\n            }\r\n        }\r\n        return NotEmptyElements === 9;\r\n    }\r\n\r\n    function EndGameCheck() {\r\n        if (ThatPlayerWon(Type.type_o)) return {\r\n            EndGame: true,\r\n            Winner: Type.type_o\r\n        }\r\n        if (ThatPlayerWon(Type.type_x)) return {\r\n            EndGame: true,\r\n            Winner: Type.type_x\r\n        }\r\n        if (IsDraw())\r\n\r\n            return {\r\n                EndGame: true,\r\n                Winner: Type.none\r\n            };\r\n\r\n\r\n        else return {\r\n            EndGame: false,\r\n            Winner: Type.none\r\n        };\r\n    }\r\n\r\n    const SwitchTurn = (current: Turn) => {\r\n        if (current === Turn.player1) return Turn.player2;\r\n        else return Turn.player1;\r\n    }\r\n    return (\r\n        <div\r\n            style={{\r\n                width,\r\n                height,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-around'\r\n\r\n            }}\r\n        >\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 2)}/></IconButton>\r\n            <Winner winnerString={winner.is}/>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}