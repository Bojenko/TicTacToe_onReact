{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\Game.tsx\";\nimport React from 'react';\nimport { IconButton } from \"@mui/material\";\nimport Toe, { Type } from \"./Toe\";\nimport Winner from './Winner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStatement = [[Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none]];\nvar Turn;\n\n(function (Turn) {\n  Turn[\"player1\"] = \"player1\";\n  Turn[\"player2\"] = \"player2\";\n})(Turn || (Turn = {}));\n\nconst Game = _ref => {\n  let {\n    width = '400px',\n    height = '400px'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Winner, {\n      winnerString: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Game;\nlet winner = me;\n\nfor (let i = 0; i < 1000; i++) {\n  console.log(winner);\n  if (winner == 'me') winner = 'you';else winner = 'me';\n}\n\nlet curTurn = Turn.player1;\nlet continueFlag = true;\n\nfunction GetGameField(x, y) {\n  if (curTurn === Turn.player1) {\n    GameStatement[x][y] = Type.type_o;\n  } else {\n    GameStatement[x][y] = Type.type_x;\n  } // eslint-disable-next-line no-restricted-globals\n\n\n  curTurn = SwitchTurn(curTurn);\n\n  if (EndGameCheck().EndGame) {\n    WinnerMessage(EndGameCheck().Winner);\n  }\n\n  if (!continueFlag) return Type.none;else return GameStatement[x][y];\n}\n\n_c2 = GetGameField;\n\nconst WinnerMessage = winner => {\n  setTimeout(() => {\n    continueFlag = false;\n  }, 10);\n  alert('WINNER IS' + winner.toString());\n};\n\n_c3 = WinnerMessage;\n\nconst ThatPlayerWon = toeType => {\n  for (let i = 0; i < 3; i++) {\n    if (GameStatement[i][0] === toeType && GameStatement[i][1] === toeType && GameStatement[i][2] === toeType) {\n      return true;\n    }\n  }\n\n  for (let i = 0; i < 3; i++) {\n    if (GameStatement[0][i] === toeType && GameStatement[1][i] === toeType && GameStatement[2][i] === toeType) {\n      return true;\n    }\n  }\n\n  if (GameStatement[0][0] === toeType && GameStatement[1][1] === toeType && GameStatement[2][2] === toeType) {\n    return true;\n  }\n\n  if (GameStatement[0][2] === toeType && GameStatement[1][1] === toeType && GameStatement[2][0] === toeType) {\n    return true;\n  }\n};\n\n_c4 = ThatPlayerWon;\n\nconst IsDraw = () => {\n  let NotEmptyElements = 0;\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (GameStatement[i][j] !== Type.none) NotEmptyElements++;\n    }\n  }\n\n  return NotEmptyElements === 9;\n};\n\n_c5 = IsDraw;\n\nfunction EndGameCheck() {\n  if (ThatPlayerWon(Type.type_o)) return {\n    EndGame: true,\n    Winner: Type.type_o\n  };\n  if (ThatPlayerWon(Type.type_x)) return {\n    EndGame: true,\n    Winner: Type.type_x\n  };\n  if (IsDraw()) return {\n    EndGame: true,\n    Winner: Type.none\n  };else return {\n    EndGame: false,\n    Winner: Type.none\n  };\n}\n\n_c6 = EndGameCheck;\n\nconst SwitchTurn = current => {\n  if (current === Turn.player1) return Turn.player2;else return Turn.player1;\n};\n\n_c7 = SwitchTurn;\nexport default Game;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"GetGameField\");\n$RefreshReg$(_c3, \"WinnerMessage\");\n$RefreshReg$(_c4, \"ThatPlayerWon\");\n$RefreshReg$(_c5, \"IsDraw\");\n$RefreshReg$(_c6, \"EndGameCheck\");\n$RefreshReg$(_c7, \"SwitchTurn\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/Game.tsx"],"names":["React","IconButton","Toe","Type","Winner","GameStatement","none","Turn","Game","width","height","display","flexWrap","alignItems","justifyContent","GetGameField","winner","me","i","console","log","curTurn","player1","continueFlag","x","y","type_o","type_x","SwitchTurn","EndGameCheck","EndGame","WinnerMessage","setTimeout","alert","toString","ThatPlayerWon","toeType","IsDraw","NotEmptyElements","j","current","player2"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {IconButton} from \"@mui/material\";\r\nimport Toe, {Type} from \"./Toe\";\r\nimport Winner from './Winner'\r\n\r\nexport interface GameProps {\r\n    width?: string,\r\n    height?: string\r\n}\r\n\r\n\r\nconst GameStatement: Type[][] = [\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none]\r\n]\r\n\r\nenum Turn {\r\n    player1 = 'player1',\r\n    player2 = 'player2'\r\n}\r\n\r\nconst Game: FC<GameProps> = (\r\n    {\r\n        width = '400px',\r\n        height = '400px'\r\n    }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width,\r\n                height,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-around'\r\n\r\n            }}\r\n        >\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 2)}/></IconButton>\r\n            <Winner winnerString={winner}/>\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\nlet winner:string = me;\r\nfor (let i = 0; i < 1000; i++) {\r\n    console.log(winner);\r\n    if(winner=='me')winner='you';\r\n    else winner='me';\r\n\r\n}\r\nlet curTurn: Turn = Turn.player1;\r\nlet continueFlag = true;\r\n\r\nfunction GetGameField(x: number, y: number) {\r\n    if (curTurn === Turn.player1) {\r\n        GameStatement[x][y] = Type.type_o;\r\n    } else {\r\n        GameStatement[x][y] = Type.type_x;\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    curTurn = SwitchTurn(curTurn);\r\n    if (EndGameCheck().EndGame) {\r\n        WinnerMessage(EndGameCheck().Winner)\r\n    }\r\n    if (!continueFlag) return Type.none;\r\n    else return GameStatement[x][y];\r\n}\r\n\r\nconst WinnerMessage = (winner: Type) => {\r\n    setTimeout(() => {\r\n        continueFlag = false\r\n    }, 10);\r\n    alert('WINNER IS' + winner.toString());\r\n}\r\n\r\n\r\nconst ThatPlayerWon = (toeType: Type) => {\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((GameStatement[i][0] === toeType) &&\r\n            (GameStatement[i][1] === toeType) &&\r\n            (GameStatement[i][2] === toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((GameStatement[0][i] === toeType) &&\r\n            (GameStatement[1][i] === toeType) &&\r\n            (GameStatement[2][i] === toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    if ((GameStatement[0][0] === toeType) &&\r\n        (GameStatement[1][1] === toeType) &&\r\n        (GameStatement[2][2] === toeType)) {\r\n        return true;\r\n    }\r\n    if ((GameStatement[0][2] === toeType) &&\r\n        (GameStatement[1][1] === toeType) &&\r\n        (GameStatement[2][0] === toeType)) {\r\n        return true;\r\n    }\r\n}\r\nconst IsDraw = () => {\r\n    let NotEmptyElements = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n            if (GameStatement[i][j] !== Type.none) NotEmptyElements++;\r\n        }\r\n    }\r\n    return NotEmptyElements === 9;\r\n}\r\n\r\nfunction EndGameCheck() {\r\n    if (ThatPlayerWon(Type.type_o)) return {\r\n        EndGame: true,\r\n        Winner: Type.type_o\r\n    }\r\n    if (ThatPlayerWon(Type.type_x)) return {\r\n        EndGame: true,\r\n        Winner: Type.type_x\r\n    }\r\n    if (IsDraw())\r\n\r\n        return {\r\n            EndGame: true,\r\n            Winner: Type.none\r\n        };\r\n\r\n\r\n    else return {\r\n        EndGame: false,\r\n        Winner: Type.none\r\n    };\r\n}\r\n\r\nconst SwitchTurn = (current: Turn) => {\r\n    if (current === Turn.player1) return Turn.player2;\r\n    else return Turn.player1;\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}