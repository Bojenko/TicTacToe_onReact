{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IconButton } from \"@mui/material\";\nimport Toe, { Type } from \"./Toe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GameStatement = [[Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none]];\nvar Turn;\n\n(function (Turn) {\n  Turn[\"player1\"] = \"player1\";\n  Turn[\"player2\"] = \"player2\";\n})(Turn || (Turn = {}));\n\nconst Game = _ref => {\n  _s();\n\n  let {\n    width = '400px',\n    height = '400px',\n    GameCount\n  } = _ref;\n  const [state, setState] = useState({\n    GameCount: 1\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height,\n      border: '2px solid black',\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    id: setState({\n      GameCount: GameCount\n    }).toString(),\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"/op3LWP/xlm+3oqYLDNfJ4G+reM=\");\n\n_c = Game;\nvar curType = Type.type_o;\nvar curTurn = Turn.player1;\n\nfunction GetGameField(x, y) {\n  if (curTurn == Turn.player1) {\n    GameStatement[x][y] = Type.type_o;\n  } else {\n    GameStatement[x][y] = Type.type_x;\n  }\n\n  curTurn = SwitchTurn(curTurn);\n  return GameStatement[x][y];\n}\n\n_c2 = GetGameField;\n\nconst SwitchTurn = current => {\n  if (current == Turn.player1) return Turn.player2;else return Turn.player1;\n};\n\n_c3 = SwitchTurn;\n\nconst SwitchType = e => {\n  console.log('SwitchType working');\n  if (e == undefined) console.log('e is undefined');\n\n  if (e == Type.none) {\n    e = Type.type_o;\n    curType = Type.type_o;\n  } else if (e == Type.type_o) {\n    e = Type.type_x;\n    curType = Type.type_x;\n  } else {\n    e = Type.type_o;\n    curType = Type.type_o;\n  }\n};\n\n_c4 = SwitchType;\n\nconst TypeInit = e => {\n  if (e == undefined) return Type.none;else if (e == Type.type_o) return Type.type_o;else return Type.type_x;\n};\n\n_c5 = TypeInit;\nexport default Game;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"GetGameField\");\n$RefreshReg$(_c3, \"SwitchTurn\");\n$RefreshReg$(_c4, \"SwitchType\");\n$RefreshReg$(_c5, \"TypeInit\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/Game.tsx"],"names":["React","useState","IconButton","Toe","Type","GameStatement","none","Turn","Game","width","height","GameCount","state","setState","border","display","flexWrap","alignItems","justifyContent","toString","GetGameField","curType","type_o","curTurn","player1","x","y","type_x","SwitchTurn","current","player2","SwitchType","e","console","log","undefined","TypeInit"],"mappings":"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","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport {IconButton} from \"@mui/material\";\r\nimport {Button} from \"@mui/material\";\r\nimport Toe, {Type} from \"./Toe\";\r\n\r\nexport interface GameProps {\r\n    width?: string,\r\n    height?: string,\r\n    GameCount: () => number\r\n}\r\n\r\n\r\nvar GameStatement: Type[][] = [\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none]\r\n]\r\n\r\nenum Turn {\r\n    player1 = 'player1',\r\n    player2 = 'player2'\r\n}\r\n\r\nconst Game: FC<GameProps> = (\r\n    {\r\n        width = '400px',\r\n        height = '400px',\r\n        GameCount\r\n    }) => {\r\n    const [state, setState] = useState({\r\n        GameCount: 1\r\n\r\n    });\r\n    return (\r\n        <div\r\n            style={{\r\n                width,\r\n                height,\r\n                border: '2px solid black',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-around'\r\n\r\n            }}\r\n            id={setState({GameCount: GameCount}).toString()}\r\n        >\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 2)}/></IconButton>\r\n        </div>\r\n    );\r\n\r\n};\r\nvar curType: Type = Type.type_o;\r\nvar curTurn: Turn = Turn.player1;\r\n\r\nfunction GetGameField(x: number, y: number) {\r\n    if (curTurn == Turn.player1) {\r\n        GameStatement[x][y] = Type.type_o;\r\n    } else {\r\n        GameStatement[x][y] = Type.type_x;\r\n    }\r\n    curTurn = SwitchTurn(curTurn);\r\n    return GameStatement[x][y];\r\n}\r\n\r\nconst SwitchTurn = (current: Turn) => {\r\n    if (current == Turn.player1) return Turn.player2;\r\n    else return Turn.player1;\r\n}\r\nconst SwitchType = (e: Type | undefined) => {\r\n    console.log('SwitchType working');\r\n    if (e == undefined) console.log('e is undefined');\r\n    if (e == Type.none) {\r\n        e = Type.type_o;\r\n        curType = Type.type_o\r\n    } else if (e == Type.type_o) {\r\n        e = Type.type_x;\r\n        curType = Type.type_x\r\n    } else {\r\n        e = Type.type_o;\r\n        curType = Type.type_o;\r\n    }\r\n}\r\n\r\nconst TypeInit = (e: Type | undefined) => {\r\n    if (e == undefined) return Type.none;\r\n    else if (e == Type.type_o) return Type.type_o;\r\n    else return Type.type_x;\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}