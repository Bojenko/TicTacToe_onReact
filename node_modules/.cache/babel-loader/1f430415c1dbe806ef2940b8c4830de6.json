{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\Game.tsx\";\nimport React from 'react';\nimport { IconButton } from \"@mui/material\";\nimport Toe, { Type } from \"./Toe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GameStatement = [[Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none]];\nvar Turn;\n\n(function (Turn) {\n  Turn[\"player1\"] = \"player1\";\n  Turn[\"player2\"] = \"player2\";\n})(Turn || (Turn = {}));\n\nconst Game = _ref => {\n  let {\n    width = '400px',\n    height = '400px'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height,\n      border: '2px solid black',\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Game;\nvar curType = Type.type_o;\nvar curTurn = Turn.player1;\n\nfunction GetGameField(x, y) {\n  if (curTurn == Turn.player1) {\n    GameStatement[x][y] = Type.type_o;\n  } else {\n    GameStatement[x][y] = Type.type_x;\n  }\n\n  if (EndGameCheck()) return Type.none;\n  curTurn = SwitchTurn(curTurn);\n  return GameStatement[x][y];\n}\n\n_c2 = GetGameField;\n\nconst ThatPlayerWon = toeType => {\n  for (let i = 0; i < 3; i++) {\n    if (GameStatement[i][0] == toeType && GameStatement[i][1] == toeType && GameStatement[i][2] == toeType) {\n      return true;\n    }\n  }\n\n  for (let i = 0; i < 3; i++) {\n    if (GameStatement[0][i] == toeType && GameStatement[1][i] == toeType && GameStatement[2][i] == toeType) {\n      return true;\n    }\n  }\n\n  if (GameStatement[0][0] == toeType && GameStatement[1][1] == toeType && GameStatement[2][2] == toeType) {\n    return true;\n  }\n\n  if (GameStatement[0][2] == toeType && GameStatement[1][1] == toeType && GameStatement[2][0] == toeType) {\n    return true;\n  }\n};\n\n_c3 = ThatPlayerWon;\n\nconst IsDraw = () => {\n  var NotEmptyElements = 0;\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (GameStatement[i][j] != Type.none) NotEmptyElements++;\n    }\n  }\n\n  if (NotEmptyElements != 9) return false;else return true;\n};\n\n_c4 = IsDraw;\n\nfunction EndGameCheck() {\n  if (ThatPlayerWon(Type.type_o) || ThatPlayerWon(Type.type_x) || IsDraw()) return true;else return false;\n}\n\n_c5 = EndGameCheck;\n\nconst SwitchTurn = current => {\n  if (current == Turn.player1) return Turn.player2;else return Turn.player1;\n};\n\n_c6 = SwitchTurn;\n\nconst SwitchType = e => {\n  console.log('SwitchType working');\n  if (e == undefined) console.log('e is undefined');\n\n  if (e == Type.none) {\n    e = Type.type_o;\n    curType = Type.type_o;\n  } else if (e == Type.type_o) {\n    e = Type.type_x;\n    curType = Type.type_x;\n  } else {\n    e = Type.type_o;\n    curType = Type.type_o;\n  }\n};\n\n_c7 = SwitchType;\nexport default Game;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"GetGameField\");\n$RefreshReg$(_c3, \"ThatPlayerWon\");\n$RefreshReg$(_c4, \"IsDraw\");\n$RefreshReg$(_c5, \"EndGameCheck\");\n$RefreshReg$(_c6, \"SwitchTurn\");\n$RefreshReg$(_c7, \"SwitchType\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/Game.tsx"],"names":["React","IconButton","Toe","Type","GameStatement","none","Turn","Game","width","height","border","display","flexWrap","alignItems","justifyContent","GetGameField","curType","type_o","curTurn","player1","x","y","type_x","EndGameCheck","SwitchTurn","ThatPlayerWon","toeType","i","IsDraw","NotEmptyElements","j","current","player2","SwitchType","e","console","log","undefined"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {IconButton} from \"@mui/material\";\r\nimport Toe, {Type} from \"./Toe\";\r\n\r\nexport interface GameProps {\r\n    width?: string,\r\n    height?: string\r\n}\r\n\r\n\r\nvar GameStatement: Type[][] = [\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none]\r\n]\r\n\r\nenum Turn {\r\n    player1 = 'player1',\r\n    player2 = 'player2'\r\n}\r\n\r\nconst Game: FC<GameProps> = (\r\n    {\r\n        width = '400px',\r\n        height = '400px'\r\n    }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width,\r\n                height,\r\n                border: '2px solid black',\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-around'\r\n\r\n            }}\r\n        >\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 2)}/></IconButton>\r\n        </div>\r\n    );\r\n\r\n};\r\nvar curType: Type = Type.type_o;\r\nvar curTurn: Turn = Turn.player1;\r\n\r\nfunction GetGameField(x: number, y: number) {\r\n    if (curTurn == Turn.player1) {\r\n        GameStatement[x][y] = Type.type_o;\r\n    } else {\r\n        GameStatement[x][y] = Type.type_x;\r\n    }\r\n    if (EndGameCheck())return Type.none;\r\n    curTurn = SwitchTurn(curTurn);\r\n    return GameStatement[x][y];\r\n}\r\n\r\nconst ThatPlayerWon = (toeType: Type) => {\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((GameStatement[i][0] == toeType) &&\r\n            (GameStatement[i][1] == toeType) &&\r\n            (GameStatement[i][2] == toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((GameStatement[0][i] == toeType) &&\r\n            (GameStatement[1][i] == toeType) &&\r\n            (GameStatement[2][i] == toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    if ((GameStatement[0][0] == toeType) &&\r\n        (GameStatement[1][1] == toeType) &&\r\n        (GameStatement[2][2] == toeType)) {\r\n        return true;\r\n    }\r\n    if ((GameStatement[0][2] == toeType) &&\r\n        (GameStatement[1][1] == toeType) &&\r\n        (GameStatement[2][0] == toeType)) {\r\n        return true;\r\n    }\r\n}\r\nconst IsDraw = () => {\r\n    var NotEmptyElements = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n            if (GameStatement[i][j] != Type.none) NotEmptyElements++;\r\n        }\r\n    }\r\n    if (NotEmptyElements != 9) return false;\r\n    else return true;\r\n}\r\nfunction EndGameCheck() {\r\n    if(ThatPlayerWon(Type.type_o)||ThatPlayerWon(Type.type_x)||IsDraw())return true;\r\n    else return false;\r\n}\r\n\r\nconst SwitchTurn = (current: Turn) => {\r\n    if (current == Turn.player1) return Turn.player2;\r\n    else return Turn.player1;\r\n}\r\nconst SwitchType = (e: Type | undefined) => {\r\n    console.log('SwitchType working');\r\n    if (e == undefined) console.log('e is undefined');\r\n    if (e == Type.none) {\r\n        e = Type.type_o;\r\n        curType = Type.type_o\r\n    } else if (e == Type.type_o) {\r\n        e = Type.type_x;\r\n        curType = Type.type_x\r\n    } else {\r\n        e = Type.type_o;\r\n        curType = Type.type_o;\r\n    }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}