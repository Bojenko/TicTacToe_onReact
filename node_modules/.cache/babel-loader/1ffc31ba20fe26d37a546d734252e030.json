{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\Game.tsx\";\nimport React from 'react';\nimport { IconButton } from \"@mui/material\";\nimport Toe, { Type } from \"./Toe\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar GameStatement = [[Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none]];\nvar Turn;\n\n(function (Turn) {\n  Turn[\"player1\"] = \"player1\";\n  Turn[\"player2\"] = \"player2\";\n})(Turn || (Turn = {}));\n\nconst Game = _ref => {\n  let {\n    width = '400px',\n    height = '400px'\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(0, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(1, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => GetGameField(2, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Game;\nvar curType = Type.type_o;\nvar curTurn = Turn.player1;\nvar continueFlag = true;\n\nfunction GetGameField(x, y) {\n  if (curTurn == Turn.player1) {\n    GameStatement[x][y] = Type.type_o;\n  } else {\n    GameStatement[x][y] = Type.type_x;\n  } // eslint-disable-next-line no-restricted-globals\n\n\n  curTurn = SwitchTurn(curTurn);\n\n  if (EndGameCheck().EndGame == true) {\n    WinnerMessage(EndGameCheck().Winner);\n  }\n\n  if (!continueFlag) return Type.none;else return GameStatement[x][y];\n}\n\n_c2 = GetGameField;\n\nconst WinnerMessage = winner => {\n  setTimeout(() => {\n    continueFlag = false;\n  }, 10);\n  alert('WINNER IS' + winner.toString());\n};\n\n_c3 = WinnerMessage;\n\nconst ThatPlayerWon = toeType => {\n  for (let i = 0; i < 3; i++) {\n    if (GameStatement[i][0] == toeType && GameStatement[i][1] == toeType && GameStatement[i][2] == toeType) {\n      return true;\n    }\n  }\n\n  for (let i = 0; i < 3; i++) {\n    if (GameStatement[0][i] == toeType && GameStatement[1][i] == toeType && GameStatement[2][i] == toeType) {\n      return true;\n    }\n  }\n\n  if (GameStatement[0][0] == toeType && GameStatement[1][1] == toeType && GameStatement[2][2] == toeType) {\n    return true;\n  }\n\n  if (GameStatement[0][2] == toeType && GameStatement[1][1] == toeType && GameStatement[2][0] == toeType) {\n    return true;\n  }\n};\n\n_c4 = ThatPlayerWon;\n\nconst IsDraw = () => {\n  var NotEmptyElements = 0;\n\n  for (let i = 0; i < 3; i++) {\n    for (let j = 0; j < 3; j++) {\n      if (GameStatement[i][j] != Type.none) NotEmptyElements++;\n    }\n  }\n\n  if (NotEmptyElements != 9) return false;else return true;\n};\n\n_c5 = IsDraw;\n\nfunction EndGameCheck() {\n  if (ThatPlayerWon(Type.type_o)) return {\n    EndGame: true,\n    Winner: Type.type_o\n  };\n  if (ThatPlayerWon(Type.type_x)) return {\n    EndGame: true,\n    Winner: Type.type_x\n  };\n  if (IsDraw()) return {\n    EndGame: true,\n    Winner: Type.none\n  };else return {\n    EndGame: false,\n    Winner: Type.none\n  };\n}\n\n_c6 = EndGameCheck;\n\nconst SwitchTurn = current => {\n  if (current == Turn.player1) return Turn.player2;else return Turn.player1;\n};\n\n_c7 = SwitchTurn;\n\nconst SwitchType = e => {\n  console.log('SwitchType working');\n  if (e == undefined) console.log('e is undefined');\n\n  if (e == Type.none) {\n    e = Type.type_o;\n    curType = Type.type_o;\n  } else if (e == Type.type_o) {\n    e = Type.type_x;\n    curType = Type.type_x;\n  } else {\n    e = Type.type_o;\n    curType = Type.type_o;\n  }\n};\n\n_c8 = SwitchType;\nexport default Game;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"GetGameField\");\n$RefreshReg$(_c3, \"WinnerMessage\");\n$RefreshReg$(_c4, \"ThatPlayerWon\");\n$RefreshReg$(_c5, \"IsDraw\");\n$RefreshReg$(_c6, \"EndGameCheck\");\n$RefreshReg$(_c7, \"SwitchTurn\");\n$RefreshReg$(_c8, \"SwitchType\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/Game.tsx"],"names":["React","IconButton","Toe","Type","GameStatement","none","Turn","Game","width","height","display","flexWrap","alignItems","justifyContent","GetGameField","curType","type_o","curTurn","player1","continueFlag","x","y","type_x","SwitchTurn","EndGameCheck","EndGame","WinnerMessage","Winner","winner","setTimeout","alert","toString","ThatPlayerWon","toeType","i","IsDraw","NotEmptyElements","j","current","player2","SwitchType","e","console","log","undefined"],"mappings":"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","sourcesContent":["import React, {FC} from 'react';\r\nimport {IconButton} from \"@mui/material\";\r\nimport Toe, {Type} from \"./Toe\";\r\n\r\nexport interface GameProps {\r\n    width?: string,\r\n    height?: string\r\n}\r\n\r\n\r\nvar GameStatement: Type[][] = [\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none]\r\n]\r\n\r\nenum Turn {\r\n    player1 = 'player1',\r\n    player2 = 'player2'\r\n}\r\n\r\nconst Game: FC<GameProps> = (\r\n    {\r\n        width = '400px',\r\n        height = '400px'\r\n    }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width,\r\n                height,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-around'\r\n\r\n            }}\r\n        >\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(0, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(1, 2)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 0)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 1)}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={() => GetGameField(2, 2)}/></IconButton>\r\n        </div>\r\n    );\r\n\r\n};\r\nvar curType: Type = Type.type_o;\r\nvar curTurn: Turn = Turn.player1;\r\nvar continueFlag = true;\r\n\r\nfunction GetGameField(x: number, y: number) {\r\n    if (curTurn == Turn.player1) {\r\n        GameStatement[x][y] = Type.type_o;\r\n    } else {\r\n        GameStatement[x][y] = Type.type_x;\r\n    }\r\n    // eslint-disable-next-line no-restricted-globals\r\n    curTurn = SwitchTurn(curTurn);\r\n    if (EndGameCheck().EndGame == true) {\r\n        WinnerMessage(EndGameCheck().Winner)\r\n    }\r\n    if (!continueFlag) return Type.none;\r\n    else return GameStatement[x][y];\r\n}\r\n\r\nconst WinnerMessage = (winner: Type) => {\r\n    setTimeout(()=>{continueFlag=false},10);\r\n    alert('WINNER IS' + winner.toString());\r\n}\r\n\r\nconst ThatPlayerWon = (toeType: Type) => {\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((GameStatement[i][0] == toeType) &&\r\n            (GameStatement[i][1] == toeType) &&\r\n            (GameStatement[i][2] == toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    for (let i = 0; i < 3; i++) {\r\n        if ((GameStatement[0][i] == toeType) &&\r\n            (GameStatement[1][i] == toeType) &&\r\n            (GameStatement[2][i] == toeType)) {\r\n            return true;\r\n        }\r\n    }\r\n    if ((GameStatement[0][0] == toeType) &&\r\n        (GameStatement[1][1] == toeType) &&\r\n        (GameStatement[2][2] == toeType)) {\r\n        return true;\r\n    }\r\n    if ((GameStatement[0][2] == toeType) &&\r\n        (GameStatement[1][1] == toeType) &&\r\n        (GameStatement[2][0] == toeType)) {\r\n        return true;\r\n    }\r\n}\r\nconst IsDraw = () => {\r\n    var NotEmptyElements = 0;\r\n    for (let i = 0; i < 3; i++) {\r\n        for (let j = 0; j < 3; j++) {\r\n            if (GameStatement[i][j] != Type.none) NotEmptyElements++;\r\n        }\r\n    }\r\n    if (NotEmptyElements != 9) return false;\r\n    else return true;\r\n}\r\n\r\nfunction EndGameCheck() {\r\n    if (ThatPlayerWon(Type.type_o)) return {\r\n        EndGame: true,\r\n        Winner: Type.type_o\r\n    }\r\n    if (ThatPlayerWon(Type.type_x)) return {\r\n        EndGame: true,\r\n        Winner: Type.type_x\r\n    }\r\n    if (IsDraw())\r\n\r\n        return {\r\n            EndGame: true,\r\n            Winner: Type.none\r\n        };\r\n\r\n\r\n    else return {\r\n        EndGame: false,\r\n        Winner: Type.none\r\n    };\r\n}\r\n\r\nconst SwitchTurn = (current: Turn) => {\r\n    if (current == Turn.player1) return Turn.player2;\r\n    else return Turn.player1;\r\n}\r\nconst SwitchType = (e: Type | undefined) => {\r\n    console.log('SwitchType working');\r\n    if (e == undefined) console.log('e is undefined');\r\n    if (e == Type.none) {\r\n        e = Type.type_o;\r\n        curType = Type.type_o\r\n    } else if (e == Type.type_o) {\r\n        e = Type.type_x;\r\n        curType = Type.type_x\r\n    } else {\r\n        e = Type.type_o;\r\n        curType = Type.type_o;\r\n    }\r\n}\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}