{"ast":null,"code":"var _jsxFileName = \"D:\\\\test_react_app\\\\untitled\\\\src\\\\components\\\\Game.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { IconButton } from \"@mui/material\";\nimport Toe, { Type } from \"./Toe\";\nimport WinnerAlert from \"./WinnerAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameStatement = [[Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none], [Type.none, Type.none, Type.none]];\nconst WinnerStatement = [[false], [false], [false], [false], [false], [false], [false], [false], [false]];\nvar Turn;\n\n(function (Turn) {\n  Turn[\"player1\"] = \"player1\";\n  Turn[\"player2\"] = \"player2\";\n})(Turn || (Turn = {}));\n\nconst Game = _ref => {\n  _s();\n\n  let {\n    width = '400px',\n    height = '400px'\n  } = _ref;\n  let curTurn = Turn.player1;\n  const [gameField, setGameField] = useState({\n    field: GameStatement\n  });\n  const [winnersField, setWinnersField] = useState({\n    winners: WinnerStatement\n  });\n  const [winner, setWinner] = useState('none');\n\n  const SetGameField = (x, y) => {\n    if (curTurn === Turn.player1) {\n      GameStatement[x][y] = Type.type_o;\n    }\n\n    if (curTurn === Turn.player2) {\n      GameStatement[x][y] = Type.type_x;\n    }\n\n    setGameField({\n      field: GameStatement\n    }); // eslint-disable-next-line no-restricted-globals\n\n    curTurn = SwitchTurn(curTurn);\n\n    if (EndGameCheck().EndGame) {\n      setWinner(EndGameCheck().Winner.toString());\n      console.log(EndGameCheck().Winner);\n    }\n\n    return; // if (!continueFlag) return Type.none;\n  };\n\n  const SwitchTurn = current => {\n    if (current === Turn.player1) return Turn.player2;else return Turn.player1;\n  };\n\n  const ThatPlayerWon = toeType => {\n    for (let i = 0; i < 3; i++) {\n      if (GameStatement[i][0] === toeType && GameStatement[i][1] === toeType && GameStatement[i][2] === toeType) {\n        WinnerStatement[i][0] = true;\n        WinnerStatement[i][1] = true;\n        WinnerStatement[i][2] = true;\n        setWinnersField({\n          winners: WinnerStatement\n        });\n        return true;\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      if (GameStatement[0][i] === toeType && GameStatement[1][i] === toeType && GameStatement[2][i] === toeType) {\n        WinnerStatement[0][i] = true;\n        WinnerStatement[1][i] = true;\n        WinnerStatement[2][i] = true;\n        setWinnersField({\n          winners: WinnerStatement\n        });\n        return true;\n      }\n    }\n\n    if (GameStatement[0][0] === toeType && GameStatement[1][1] === toeType && GameStatement[2][2] === toeType) {\n      WinnerStatement[0][0] = true;\n      WinnerStatement[1][1] = true;\n      WinnerStatement[2][2] = true;\n      setWinnersField({\n        winners: WinnerStatement\n      });\n      return true;\n    }\n\n    if (GameStatement[0][2] === toeType && GameStatement[1][1] === toeType && GameStatement[2][0] === toeType) {\n      WinnerStatement[0][2] = true;\n      WinnerStatement[1][1] = true;\n      WinnerStatement[2][0] = true;\n      setWinnersField({\n        winners: WinnerStatement\n      });\n      return true;\n    }\n  };\n\n  const IsDraw = () => {\n    let NotEmptyElements = 0;\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (GameStatement[i][j] !== Type.none) NotEmptyElements++;\n      }\n    }\n\n    return NotEmptyElements === 9;\n  };\n\n  function EndGameCheck() {\n    if (ThatPlayerWon(Type.type_o)) return {\n      EndGame: true,\n      Winner: 'player1 wins'\n    };\n    if (ThatPlayerWon(Type.type_x)) return {\n      EndGame: true,\n      Winner: 'player2 wins'\n    };\n    if (IsDraw()) return {\n      EndGame: true,\n      Winner: 'draw'\n    };else return {\n      EndGame: false,\n      Winner: Type.none\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width,\n      height,\n      display: 'flex',\n      flexWrap: 'wrap',\n      alignItems: 'center',\n      justifyContent: 'space-around'\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(0, 0);\n        },\n        type: gameField.field[0][0],\n        win: winnersField.winners[0][0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(0, 1);\n        },\n        type: gameField.field[0][1],\n        win: winnersField.winners[0][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(0, 2);\n        },\n        type: gameField.field[0][2],\n        win: winnersField.winners[0][2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(1, 0);\n        },\n        type: gameField.field[1][0],\n        win: winnersField.winners[1][0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(1, 1);\n        },\n        type: gameField.field[1][1],\n        win: winnersField.winners[1][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(1, 2);\n        },\n        type: gameField.field[1][2],\n        win: winnersField.winners[1][2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(2, 0);\n        },\n        type: gameField.field[2][0],\n        win: winnersField.winners[2][0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(2, 1);\n        },\n        type: gameField.field[2][1],\n        win: winnersField.winners[2][1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: 'primary',\n      children: /*#__PURE__*/_jsxDEV(Toe, {\n        onClick: () => {\n          SetGameField(2, 2);\n        },\n        type: gameField.field[2][2],\n        win: winnersField.winners[2][2]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(WinnerAlert, {\n      player: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"k2XewVoVDE1qAgu4/F/3dgS/+Os=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["D:/test_react_app/untitled/src/components/Game.tsx"],"names":["React","useState","IconButton","Toe","Type","WinnerAlert","GameStatement","none","WinnerStatement","Turn","Game","width","height","curTurn","player1","gameField","setGameField","field","winnersField","setWinnersField","winners","winner","setWinner","SetGameField","x","y","type_o","player2","type_x","SwitchTurn","EndGameCheck","EndGame","Winner","toString","console","log","current","ThatPlayerWon","toeType","i","IsDraw","NotEmptyElements","j","display","flexWrap","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {FC, useState} from 'react';\r\nimport {IconButton} from \"@mui/material\";\r\nimport Toe, {Type} from \"./Toe\";\r\nimport WinnerAlert from \"./WinnerAlert\";\r\n\r\nexport interface GameProps {\r\n    width?: string,\r\n    height?: string\r\n}\r\n\r\n\r\nconst GameStatement: Type[][] = [\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none],\r\n    [Type.none, Type.none, Type.none]\r\n]\r\nconst WinnerStatement: boolean[][] = [\r\n    [false],[false],[false],\r\n    [false],[false],[false],\r\n    [false],[false],[false]\r\n]\r\n\r\nenum Turn {\r\n    player1 = 'player1',\r\n    player2 = 'player2'\r\n}\r\n\r\nconst Game: FC<GameProps> = (\r\n    {\r\n        width = '400px',\r\n        height = '400px'\r\n    }) => {\r\n\r\n    let curTurn: Turn = Turn.player1;\r\n    const [gameField, setGameField]=useState({\r\n        field:GameStatement\r\n    })\r\n    const [winnersField, setWinnersField] = useState({\r\n        winners:WinnerStatement\r\n    })\r\n    const [winner, setWinner] = useState('none');\r\n\r\n    const SetGameField =(x: number, y: number)=> {\r\n        if (curTurn === Turn.player1) {\r\n            GameStatement[x][y] = Type.type_o;\r\n        }\r\n        if (curTurn === Turn.player2){\r\n            GameStatement[x][y] = Type.type_x;\r\n        }\r\n        setGameField({field: GameStatement});\r\n        // eslint-disable-next-line no-restricted-globals\r\n        curTurn = SwitchTurn(curTurn);\r\n        if (EndGameCheck().EndGame) {\r\n            setWinner(EndGameCheck().Winner.toString());\r\n            console.log(EndGameCheck().Winner)\r\n        }\r\n        return;\r\n        // if (!continueFlag) return Type.none;\r\n    }\r\n\r\n    const SwitchTurn = (current: Turn) => {\r\n        if (current === Turn.player1) return Turn.player2;\r\n        else return Turn.player1;\r\n    }\r\n\r\n    const ThatPlayerWon = (toeType: Type) => {\r\n        for (let i = 0; i < 3; i++) {\r\n            if ((GameStatement[i][0] === toeType) &&\r\n                (GameStatement[i][1] === toeType) &&\r\n                (GameStatement[i][2] === toeType)) {\r\n                WinnerStatement[i][0]=true;\r\n                WinnerStatement[i][1]=true;\r\n                WinnerStatement[i][2]=true;\r\n                setWinnersField({winners: WinnerStatement})\r\n                return true;\r\n            }\r\n        }\r\n        for (let i = 0; i < 3; i++) {\r\n            if ((GameStatement[0][i] === toeType) &&\r\n                (GameStatement[1][i] === toeType) &&\r\n                (GameStatement[2][i] === toeType)) {\r\n                WinnerStatement[0][i]=true;\r\n                WinnerStatement[1][i]=true;\r\n                WinnerStatement[2][i]=true;\r\n                setWinnersField({winners: WinnerStatement})\r\n                return true;\r\n            }\r\n        }\r\n        if ((GameStatement[0][0] === toeType) &&\r\n            (GameStatement[1][1] === toeType) &&\r\n            (GameStatement[2][2] === toeType)) {\r\n            WinnerStatement[0][0]=true;\r\n            WinnerStatement[1][1]=true;\r\n            WinnerStatement[2][2]=true;\r\n            setWinnersField({winners: WinnerStatement})\r\n            return true;\r\n        }\r\n        if ((GameStatement[0][2] === toeType) &&\r\n            (GameStatement[1][1] === toeType) &&\r\n            (GameStatement[2][0] === toeType)) {\r\n            WinnerStatement[0][2]=true;\r\n            WinnerStatement[1][1]=true;\r\n            WinnerStatement[2][0]=true;\r\n            setWinnersField({winners: WinnerStatement})\r\n            return true;\r\n        }\r\n    }\r\n    const IsDraw = () => {\r\n        let NotEmptyElements = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n            for (let j = 0; j < 3; j++) {\r\n                if (GameStatement[i][j] !== Type.none) NotEmptyElements++;\r\n            }\r\n        }\r\n        return NotEmptyElements === 9;\r\n    }\r\n\r\n    function EndGameCheck() {\r\n        if (ThatPlayerWon(Type.type_o)) return {\r\n            EndGame: true,\r\n            Winner: 'player1 wins'\r\n        }\r\n        if (ThatPlayerWon(Type.type_x)) return {\r\n            EndGame: true,\r\n            Winner: 'player2 wins'\r\n        }\r\n        if (IsDraw())\r\n\r\n            return {\r\n                EndGame: true,\r\n                Winner: 'draw'\r\n            };\r\n\r\n\r\n        else return {\r\n            EndGame: false,\r\n            Winner: Type.none\r\n        };\r\n    }\r\n\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width,\r\n                height,\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                alignItems: 'center',\r\n                justifyContent: 'space-around'\r\n\r\n            }}\r\n        >\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(0, 0)}}\r\n                  type={gameField.field[0][0]}\r\n                  win={winnersField.winners[0][0]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(0, 1)}}\r\n                  type={gameField.field[0][1]}\r\n                  win={winnersField.winners[0][1]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(0, 2)}}\r\n                  type={gameField.field[0][2]}\r\n                  win={winnersField.winners[0][2]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(1, 0)}}\r\n                  type={gameField.field[1][0]}\r\n                  win={winnersField.winners[1][0]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(1, 1)}}\r\n                  type={gameField.field[1][1]}\r\n                  win={winnersField.winners[1][1]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(1, 2)}}\r\n                  type={gameField.field[1][2]}\r\n                  win={winnersField.winners[1][2]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(2, 0)}}\r\n                  type={gameField.field[2][0]}\r\n                  win={winnersField.winners[2][0]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(2, 1)}}\r\n                  type={gameField.field[2][1]}\r\n                  win={winnersField.winners[2][1]}/></IconButton>\r\n            <IconButton color={'primary'}\r\n            ><Toe onClick={()=>{SetGameField(2,2 )}}\r\n                  type={gameField.field[2][2]}\r\n                  win={winnersField.winners[2][2]}/></IconButton>\r\n\r\n\r\n            <WinnerAlert player={winner}\r\n            />\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Game;\r\n"]},"metadata":{},"sourceType":"module"}